library(EBcoBART)
library(EBcoBART)
?EBcoBART
data(dat)
Xtr <- as.matrix(dat$Xtrain) # Xtr should be matrix object
Ytr <- dat$Ytrain
Xte <- as.matrix(dat$Xtest) # Xte should be matrix object
Yte <- dat$Ytest
CoDat <- dat$CoData
CoDat <- model.matrix(~., CoDat) # encode grouping structure by dummies yourself (include intercept)
remove(dat)
Fit <- EBcoBART(Y=Ytr,X=Xtr,CoData = CoDat, nIter = 15, model = "binary",
EB = T, Info = T, Seed = T,
nchain = 5, nskip = 1000, ndpost = 1000,
Prob_Init = rep(1/ncol(Xtr),ncol(Xtr)),
k = 2, alpha = .95, beta = 2)
Fit <- EBcoBART(Y=Ytr,X=Xtr,CoData = CoDat, nIter = 15, model = "binary",
EB = T, Info = T, Seed = T,
nchain = 5, nskip = 1000, ndpost = 1000,
Prob_Init = rep(1/ncol(Xtr),ncol(Xtr)),
k = 1, alpha = .1, beta = 4)
install.packages("rlang")
remotes::install_github("JeroenGoedhart/EBcoBART")
library(EBcoBART)
?EBcoBART
?EBcoBART
?EBcoBART
devtools::install_deps()
devtools::install_deps()
install.packages("cli")
devtools::install_deps()
remove.packages("cli")
devtools::install_deps()
devtools::install_deps()
devtools::install_deps()
devtools::test()
devtools::run_examples()
devtools::run_examples()
devtools::run_examples()
devtools::check()
devtools::check()
a = TRUE
!(is.logical(a))
a = matrix()
a = matrix(c(1,1,1,1),nrow = 2)
!(is.matrix(a))
(is.matrix(a))
?EBcoBART
?Dat_EBcoBART
p <- 15
n <- 30
X <- matrix(runif(n*p),nrow = n, ncol = p) #all continuous variables
Fact <- factor(sample(1:3,n,replace = TRUE)) # factor variables
X <- cbind.data.frame(X,Fact)
G <- 4   #number of groups for co-data
CoDat <- rep(1:G, rep(ncol(X)/G,G)) # first 4 covariates in group 1, 2nd 4 covariates in group 2, etc..
CoDat <- data.frame(factor(CoDat))
CoDat <- stats::model.matrix(~0+., CoDat) # encode the grouping structure with dummies
Dat <- Dat_EBcoBART(X = X, CoData = CoDat) #
X <- Dat$X
CoData <- Dat$CoData
utils::globalVariables("quasibinomial")
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
usethis::use_news_md
usethis::use_news_md()
rhub::check_for_cran()
install.packages("rhub")
rhub::check_for_cran()
?rhubv2
revdepcheck::revdep_check()
tools::dependsOnPkgs()
tools::dependsOnPkgs(pkgs="EBcoBART")
devtools::check_win_release()
devtools::check_win_devel()
devtools::check_win_oldrelease()
rhub::rhub_setup()
rhub::rhub_doctor()
rhub::rhub_doctor()
rhub::rhub_doctor()
rhub::rhub_doctor(gh_url = https://github.com/JeroenGoedhart/EBcoBART)
rhub::rhub_doctor(gh_url = https://github.com/JeroenGoedhart/EBcoBART.git)
rhub::rhub_doctor()
rhub::rhub_doctor()
rhub::rhub_doctor()
rhub::check_on_linux()
rhub::rhub_check()
rhub::rhub_doctor()
rhub::rhub_doctor()
usethis::create_github_token()
gitcreds::gitcreds_set()
gitcreds::gitcreds_set()
devtools::spell_check()
